version: '3.8'

services:
  mysql:
    image: mysql:8.0
    container_name: algornote-mysql
    environment:
      MYSQL_ROOT_PASSWORD: rootpassword
      MYSQL_DATABASE: algornote
      MYSQL_CHARACTER_SET_SERVER: utf8mb4
      MYSQL_COLLATION_SERVER: utf8mb4_unicode_ci
    ports:
      - "3307:3306"
    volumes:
      - mysql-data:/var/lib/mysql
    networks:
      - app-network
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost", "-u", "root", "-prootpassword"]
      interval: 10s
      timeout: 5s
      retries: 5

  app:
    build: . # 현재 디렉토리의 Dockerfile을 사용하여 이미지를 빌드
    container_name: my-app-container
    environment:
      SPRING_PROFILES_ACTIVE: prod
      SPRING_DATASOURCE_URL: jdbc:mysql://mysql:3306/algornote?serverTimezone=Asia/Seoul&useSSL=false&allowPublicKeyRetrieval=true
      SPRING_DATASOURCE_USERNAME: root
      SPRING_DATASOURCE_PASSWORD: rootpassword
    depends_on:
      mysql:
        condition: service_healthy
    networks:
      - app-network

  nginx:
    image: nginx:alpine
    container_name: my-nginx-proxy
    ports:
      - "80:80" # 외부의 80 포트 요청을 Nginx 컨테이너의 80 포트로 연결
    volumes:
      # 위에서 작성한 nginx.conf를 컨테이너 내부의 설정 파일 경로에 덮어씌움
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
    depends_on:
      - app # app 서비스가 먼저 시작된 후 nginx 서비스가 시작되도록 보장
    networks:
      - app-network

networks:
  app-network:
    driver: bridge

volumes:
  mysql-data: