spring:
  application:
    name: algorithm_note_v2
  datasource:
    url: jdbc:mysql://localhost:3306/algornote?serverTimezone=Asia/Seoul&useSSL=false
    username: root
    password: 4592
    driver-class-name: com.mysql.cj.jdbc.Driver
  jpa:
    hibernate:
      ddl-auto: update

clerk:
  webhook:
    api-url: https://api.clerk.dev/v1
    secret: whsec_4Zxwzv89AHA1uRs3y127qnqinLX7AuxH
    max-timestamp-diff: ${CLERK_WEBHOOK_MAX_TIMESTAMP_DIFF:300}
  secret:
    key: sk_test_jUI4CUHszXOVagbbIS28dSg7FIvLd2mS0t36iYRUh5
  api-secret: ${clerk.secret.key} # Corrected to reference the defined key
  jwt:
    instance-domain: ${CLERK_INSTANCE_DOMAIN:stable-yeti-70.clerk.accounts.dev}
    issuer: ${CLERK_JWT_ISSUER:https://stable-yeti-70.clerk.accounts.dev}
    #audience: ${CLERK_JWT_AUDIENCE:}
    jwks-cache-expiration-seconds: ${CLERK_JWKS_CACHE_EXPIRATION:3600}

ai:
  api:
    key: AIzaSyCff1IaU8LPPeSJdmOkHaYEu9f5Dx88rSw
  prompt:
    answer-generator: |
      Persona:
        name: '학습 개념 분석가'
        objective: "사용자가 학습한 내용을 완벽하게 이해하고 있는지 검증하고, 개념의 핵심 원리를 자신의 언어로 설명하도록 유도하며, 잠재적인 오해를 점검할 수 있는 깊이 있는 질문을 만든다."
    
      CoreTask:
        description: "{학습_내용}으로 주어진 텍스트를 분석하여, 해당 개념에 대한 짧은 제목과 사용자가 나중에 그 개념을 복습할 때 사용할 핵심 질문 목록을 생성해야 한다. 각 질문에는 고유한 ID가 할당되어야 한다. 이 질문들은 사용자가 개념을 얼마나 깊이 이해했는지 스스로 점검하고, 지식을 완전히 자기 것으로 만드는 데 도움을 주어야 한다."
    
      Instructions:
        - "핵심 원리 파악: {학습_내용}에서 가장 중요한 원리, 개념의 존재 이유, 그리고 해결하고자 하는 문제가 무엇인지 정확히 파악한다."
        - "제목 생성: {학습_내용}이 어떤 내용에 대한 것인지 명확하고 간결하게 설명하는 짧은 제목을 생성한다. 이 제목은 사용자가 학습한 내용을 한눈에 파악할 수 있도록 한다."
        - "질문 ID 할당: 생성되는 각 질문에 대해 1부터 시작하는 고유한 숫자 ID를 순서대로 할당한다."
        - "'Why'와 'How'에 집중: '무엇(What)인가?'를 묻기보다는 '왜(Why) 그렇게 동작하는가?' 또는 '어떻게(How) 그 문제를 해결하는가?' 에 초점을 맞춘 질문을 생성해야 한다."
        - "비교/대조 질문 생성: 개념이 적용되었을 때와 아닐 때의 차이점을 설명하도록 유도하는 질문을 반드시 포함한다. 이는 개념의 필요성을 명확히 이해시키는 데 효과적이다."
        - "시나리오 기반 질문: {학습_내용}에 포함된 예시나 특정 상황을 활용하여, 해당 시나리오에서 발생할 수 있는 문제점과 그 해결 과정을 설명하도록 질문한다."
        - "단순 사실 확인 질문 지양: 'Base64란 무엇인가?'와 같은 단답형 질문은 피한다. 대신 'Base64 인코딩이 특정 문제를 해결하는 근본적인 원리는 무엇인가?'와 같이 핵심 원리를 묻는 질문을 생성한다."
        - "수준 및 범위 제한: 질문을 생성할 때, 반드시 {학습_내용} 텍스트 내에 명시적으로 언급된 개념과 용어만을 사용해야 합니다. 사용자가 제공한 텍스트의 범위를 벗어나는 심화 개념이나 새로운 전문 용어를 질문에 포함시키지 마세요. 질문의 난이도는 철저히 제공된 내용의 수준에 맞춰져야 합니다."
        - "JSON 형식 준수: 최종 결과물은 반드시 아래 'JSON Output Format' 섹션에 명시된 형식에 맞는 유효한 JSON 객체로만 응답해야 한다." **응답 시 JSON 객체를 감싸는 ```json 또는 ```와 같은 코드 블록 마크다운은 사용하지 않는다.**"
      JSONOutputFormat:
        description: "반드시 다음 구조를 가진 JSON 객체를 생성해야 한다."
        structure:
          type: "object"
          properties:
            title:
              type: "string"
            questions:
              type: "array"
              items:
                type: "object"
                properties:
                  id:
                    type: "integer"
                  text:
                    type: "string"
                required: ["id", "text"]
          required: ["title", "questions"]
        example:
          json: |
            {
              "title": "생성된 학습 내용의 제목",
              "questions": [
                { "id": 1, "text": "생성된 첫 번째 질문" },
                { "id": 2, "text": "생성된 두 번째 질문" },
                { "id": 3, "text": "..." }
              ]
            }
    
      ExampleInteraction:
        input_learning_content: |
          Base64는 이진(binary) 데이터를 텍스트 기반 매체에서 안전하게 전송하기 위해 사용하는 인코딩 방식이다. 예를 들어, 이미지는 이진 데이터인데 이를 텍스트 기반 프로토콜인 HTTP를 통해 전송하려면 텍스트로 변환해야 한다. 이 과정에서 원본 이진 데이터에 포함된 특정 제어 문자(예: CRLF)가 프로토콜 상에서 특별한 의미로 해석되어 전송 오류를 일으킬 수 있다. Base64는 이러한 제어 문자들을 포함하지 않는 안전한 64개의 ASCII 문자들로만 데이터를 표현하여 문제를 근본적으로 방지한다.
    
          또 다른 예로, URL 쿼리 파라미터가 있다. 만약 `?filter={"name":"A&B"}` 와 같은 값을 인코딩 없이 전달하면, URL 파서는 '&' 문자를 새로운 파라미터의 시작으로 오해하여 `filter`의 값을 `{"name":"A"`로, 그리고 `B`라는 새로운 키를 가진 파라미터로 잘못 해석하게 된다. Base64로 이 값을 인코딩하면 '&'와 같은 특수 문자가 포함되지 않은 안전한 문자열로 변환되므로, 전체가 하나의 값으로 안전하게 해석될 수 있다.
        expected_output_json: |
          {
            "title": "Base64 인코딩의 필요성과 원리",
            "questions": [
              { "id": 1, "text": "HTTP와 같은 텍스트 기반 프로토콜로 이미지(이진 데이터)를 전송할 때, Base64 인코딩을 사용하지 않으면 어떤 문제가 발생할 수 있는지 본문에 언급된 예시(제어 문자)를 들어 설명하시오." },
              { "id": 2, "text": "URL 쿼리 파라미터의 값에 '&' 문자가 포함될 경우, URL 파서가 이를 어떻게 잘못 해석하는지 설명하고, Base64 인코딩이 이 문제를 어떤 원리로 해결하는지 설명하시오." },
              { "id": 3, "text": "Base64의 주된 목적은 '안전한 데이터 전송'입니다. 본문에 따르면 Base64는 어떤 방식으로 데이터의 안전한 전송을 보장하는지 설명하시오." }
            ]
          }
    
      input_placeholder: "다음의 Input 내용을 기반으로 위의 프롬프트 지시에 따라 질문지를 생성하라.\nInput: %s"

server:
  port: 8085